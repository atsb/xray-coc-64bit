TITLE: X-Ray Engine 1.6 task list

Legend
------
- Planned
* In progress
+ Done
o On hold
? Decision pending
c Canceled

--------------------------------

nitrocaster: Pavel Kovalenko
- Mgc::Math::PI (MgcMath.h) conflicts with PI macro
- get the entire solution compiled with ForceConformanceInForLoopScope=false
- get rid of atimgpu, use amd ags instead (will also eliminate LNK4098)
- scan solution with PVS-Studio and fix found bugs
* get rid of any borland specific code
  * write new or use existing controls instead of ones from VCL/ElPack/AlexMX
  * adopt/rewrite editors
    - LevelEditor
    - ActorEditor
    - ShaderEditor
    - ParticleEditor
    * PPEditor
- Modules
  - subdivide xrGame into multiple modules (so changed code could be compiled faster)
  - merge xrCPU_Pipe into xrCore
  - merge xrAPI into xrCore
  - merge xrXMLParser into xrCore
  - merge crypto into xrCore
- 3rd party libraries
  - decouple/update ODE
    - dig through current ODE and analyze changes that were made by GSC
    - get the latest ODE and make sure it can be used with xray
  - decouple OpenSSL
  - decouple OpenAL
  - decouple GameSpy
  - decouple lzo
  - decouple PPMd
  - decouple hxGrid
- bugs/issues
  - generic
    - (bytes_need<=mSize) && vl_Count
  - UI
    c clip cursor in windowed mode with enabled input capture
    - dragging music volume slider doesn't make any effect until one presses 'Apply' button
    ? save MP settings
  - core
    - misplaced arguments in calls to xrDebug::backend
  - multiplayer
    - dedicated server
  - render
    - when d3d compiler fails to compile some shader, it displays message
      "Your video card doesn't meet game requirements ..." even if GPU actually meets game requirements (feature level)
    - blurred text on r4
    - alpha transparency works improperly - objects like steelworks and meshes quickly lose details and become
      invisible when camera moves away (r1 looks better)
    - R1: incorrect sun path
    - make saturation dependent on exposure (see ArmA series)
    - improve night vision
  - physics
    - falling actor can continue being in falling state under specific conditions
  - plugins
    - update plugins for new 3DS Max versions
- improvements
  - common/unsorted
    - review and refactor code
    - fix log messages format (normally, the 'color' character should be followed by a space)
    - add registry entries (player name, cdkey, etc) if not exist
  - UI
    - close sleep dialog by ESC key
  - multiplayer
    - ipv6 support
    - get rid of DirectPlay
    - log suspicious packets and kick/ban its senders after X attempts
    - dedicated server
      - remove unnecessary modules initialization (render/sound/etc...)
      - use standard windows unput instead of DirectInput (causes problems on dedicated servers)
      - console (remove GUI and use separate administrative tool?)
      - remove topmost startup logo window
      - Linux support
  - xrCore
    - get rid of old blackbox code
    - refactor xrDebug
    - logger
      - don't keep log in std::vector, write to log file immediately
      - tweak CConsole to use new logger
  - render
    - FXAA
    - SMAA
    - PCSS (or some other alternative)
    - glow material doesn't cast shadows (causes artefacts on actor shadow)
  - consider disabling accel when falling (more realistic)
  - xrLC
    - try to optimize memory requirements (use disk cache for intermediate data?)

STALKER_2010: Andrew Boyarshin
* detach/update LuaJIT
* detach/update LuaBind

awdavies: Andrew Davies
- cleanup
  * Get rid of deprecation compiler warnings.
  * Remove macro redefinitions.
- engine
  - multithreading (order listed is order of completion).
    - research
      - Determine where multithreading could benefit potential performance bottlenecks.
      - Examine bottlenecks with profiler.  Document results.
      - Designate which tasks should be assigned to which cores.
    - implementation (edit as research gets closer to completion for more accurate plan).
      - Include library capable of creating light-weight kernel-visible threads.
      - Abstract specific tasks to certain cores.
      - Add thread pool/scheduler for tasks.
      - Run profiler again (might need to find one capable of tracking multiple threads).

Highflex: Alex M
- plugins/content creation
  * Update Primary DCC Tools ( Maya )
  - Optimize pipeline for asset converting ( direct export to game? )
  - Python scripts for stalker skeleton control rig creation
- game code
  - Improve Weapon System ( Additional Animations, Options )
